<?php
/**
 * @file
 * Theme functions.
 */

// Include all files from the includes directory.
/*$includes_path = dirname(__FILE__) . '/includes/*.inc';
foreach (glob($includes_path) as $filename) {
  require_once dirname(__FILE__) . '/includes/' . basename($filename);
}*/

function msca_theme_preprocess_node(&$variables) {
  //Upcoming Education and Events section needs field_date and field_end_date to
  //appear in a couple different formats.

  if($variables['view_mode'] == 'homepage'
    && !empty($variables['content']['field_date'][0]['#markup'])) {
    $field_date = strtotime($variables['content']['field_date'][0]['#markup']);
    $variables['content']['square_month'] = date('M', $field_date);
    $variables['content']['square_day'] = date('j', $field_date);
    $variables['content']['full_start_date'] = date('F j \a\t g:iA', $field_date);
    if(!empty($variables['content']['field_end_date'][0]['#markup'])) {
      $field_end_date = strtotime($variables['content']['field_end_date'][0]['#markup']);
      $variables['content']['full_end_date'] = date('F j \a\t g:iA', $field_end_date);
    }
  }

}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 * Adds per content type template suggestions for page.html.twig.
 */
function msca_theme_theme_suggestions_page_alter(array &$suggestions, array $variables) {

  $node     = \Drupal::routeMatch()->getParameter('node');
  $revision = \Drupal::routeMatch()->getRawParameter('node_revision');

  //revision IDs are strings and node ids are strings when a revision is loaded.
  //node parameters loaded by getParameter are objects and the bundle can be accessed normally.
  if ($node) {
    if ($revision) {
      $revised_node = \Drupal::entityTypeManager()
                             ->getStorage('node')
                             ->loadRevision($revision);

      $content_type = $revised_node->bundle();
    }
    else {
      $content_type = $node->bundle();
    }

    $suggestions[] = 'page__' . $content_type;
  }
}