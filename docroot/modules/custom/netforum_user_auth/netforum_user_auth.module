<?php

/**
 * @file
 * Contains netforum_user_auth.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\netforum_user_auth\Controller\NetforumSso;
use Drupal\Core\Routing\TrustedRedirectResponse;
use Drupal\netforum_user_auth\PasswordExpiredException;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function netforum_user_auth_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the netforum_user_auth module.
    case 'help.page.netforum_user_auth':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Automatically creates and logs in Drupal users that are able to authenticate against NetForum&#039;s CheckEWebUser method') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function netforum_user_auth_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _netforum_user_auth_login_form_alter($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function netforum_user_auth_form_user_login_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _netforum_user_auth_login_form_alter($form, $form_state);
}

/**
 * Common login form alter.
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function _netforum_user_auth_login_form_alter(&$form, FormStateInterface $form_state) {
  // Add help text.
  $t_args = $form['name']['#description']->getArguments();
//  $form['name']['#description'] = t('Enter your @s username (your email address). You may also log on using your Netforum email address.', $t_args);
  $form['name']['#description'] = '';
  $form['pass']['#description'] = '';
  $form['forgotpass'] = [
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#value' => '<strong>Forgot your password?</strong> Please reset it <a href="https://netforumpro.com/eweb/DynamicPage.aspx?Site=MSCA&WebCode=ForgotPassword">here</a>. If you need assistance with your member log-in, please e-mail <a href="mailto:info@maseniorcare.org">info@maseniorcare.org</a>.',
  ];
  // Add custom validators.
  $key = array_search('::validateAuthentication', $form['#validate']);
  $form['#validate'][$key] = 'netform_user_auth_core_login_authenticate_validate';
  array_splice($form['#validate'], $key + 1, 0, 'netform_user_auth_login_authenticate_validate');
  $form['#validate'][] = 'netforum_user_auth_validate_membership';
  $form['#submit'][] = 'netforum_user_auth_login_submit';
}

/**
 * Login form validator.
 *  Replaces the core validator.
 */
function netform_user_auth_core_login_authenticate_validate($form, FormStateInterface $form_state) {
  // No additional validation of user credentials is needed when the uid is set.
  if (!empty($form_state->get('uid'))) {
    return;
  }
  // First, try logging in with DB values.
  $original_form = $form_state->getFormObject();
  $original_form->validateAuthentication($form, $form_state);
}

/**
 * Login form validator.
 *  Adds Netforum login handling.
 */
function netform_user_auth_login_authenticate_validate($form, FormStateInterface $form_state) {
  try {
    $account = \Drupal::service('netforum_user_auth.auth')
      ->authenticate($form_state->getValue('name'), $form_state->getValue('pass'));
    if ($account) {
      $form_state->set('uid', $account->id());
    }
  }
  catch (PasswordExpiredException $exception) {
    $form_state->setErrorByName('', t('Your password has expired. <a href="@url">Click here</a> to reset it.', [
      '@url' => Url::fromUri(\Drupal\netforum_user_auth\Auth::RESET_PASSWORD_URL)->toString(),
    ]));
  }
  catch (Exception $e) {
    \Drupal::logger('netforum_user_auth')->error('Unable to authenticate @user against Netforum. Error: %err', [
      '@user' => $form_state->getValue('name'), '%err' => $e->getMessage()
    ]);
  }
}

function netforum_user_auth_validate_membership($form, FormStateInterface $form_state) {
  if (!$form_state->get('uid')) {
    return;
  }
  try {
    /** @var \Drupal\netforum_user_auth\Auth $auth */
    $auth = \Drupal::service('netforum_user_auth.auth');
    $member = $auth->userIsMember($form_state->getValue('name'), $form_state->getValue('pass'));
    /** @var \Drupal\user\UserInterface $account */
    $save = FALSE;
    $account = \Drupal::entityTypeManager()
      ->getStorage('user')
      ->load($form_state->get('uid'));
    if ($account->hasRole('member')) {
      if (!$member) {
        $account->removeRole('member');
        $save = TRUE;
      }
    }
    else {
      if ($member) {
        $account->addRole('member');
        $save = TRUE;
      }
    }
    if ($save) {
      $account->save();
    }
  }
  catch (Exception $exception) {
    watchdog_exception('netforum_user_auth', $exception);
    \Drupal::logger('netforum_user_auth')->error('Unable to determine if user @name is a member while logging in: %msg',
      ['%msg' => $exception->getMessage(), '@name' => $form_state->getValue('name')]);
  }
}

/**
 * Extra submit handler for the login form.
 *  Redirect the user to
 *
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function netforum_user_auth_login_submit(&$form, FormStateInterface $form_state) {
  if (\Drupal::currentUser()->isAnonymous()) {
    return;
  }
  // Construct a URL with the token.
  /** @var \Drupal\netforum_user_auth\Auth $auth */
  try {
    // Get the token from NF.
    $auth = \Drupal::service('netforum_user_auth.auth');
    $token = $auth->getSsoToken($form_state->getValue('name'), $form_state->getValue('pass'));
    $query = [];
    // Set up the parameters for redirection.
    $nfUrl = \Drupal::request()->get(NetforumSso::NETFORUM_REDIRECT_URL_KEY);
    if (!empty($nfUrl)) {
      $query['nfUrl'] = $nfUrl;
    }
    else {
      $destination = \Drupal::destination()->get();
      // Don't redirect to the user page but preserve other set destinations.
      if ($destination === '/user/login') {
        $destination = '<front>';
      }
      $query['redirect'] = $destination;
    }
    // Redirect to the special SSO page. Parameters preserved here and used for the final redirect.
    $query['token'] = urlencode($token);
    \Drupal::request()->query->remove('destination');
    $redirect = Url::fromRoute('netforum_user_auth.login_insert', [], ['query' => $query]);
    $response = new \Symfony\Component\HttpFoundation\RedirectResponse($redirect->toString());
    // Set the redirect.
    $form_state->setResponse($response);
  }
  catch (Exception $exception) {
    watchdog_exception('netforum_user_auth', $exception);
    \Drupal::logger('netforum_user_auth')->error('Unable to complete NetForum SSO.');
    drupal_set_message(t('An error occurred while signing in.'));
  }
}
