<?php
/**
 * @file
 *  Drupal hooks for facility_search.module
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function facility_search_form_views_exposed_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  /** @var \Drupal\views\ViewExecutable $view */
  $view = $form_state->get('view');
  if ($view->id() !== 'facility_search') {
    return;
  }

  // Hide the "keys" filter.
  $form['keys']['#type'] = 'hidden';

  // Turn the proximity filter into a dropdown.
  $form['proximity']['#type'] = 'select';
  $form['proximity']['#size'] = 1;
  $form['proximity']['#empty_option'] = t('-Distance-');
  for ($i = 1; $i < 21; $i++) {
    $form['proximity']['#options'][$i*5] = $i*5 . ' miles';
  }

  // Turn the city filter into a dropdown.
  $cities = \Drupal::database()->select('node__field_address', 'address')
    ->fields('address', ['field_address_locality'])
    ->condition('bundle', 'facility')
    ->condition('field_address_locality', '', '<>')
    ->orderBy('field_address_locality', 'ASC')
    ->distinct()
    ->execute()->fetchCol();
  if (!empty($cities)) {
    $city_filter = $form['#info']['filter-field_address_locality']['value'];
    $cities = array_combine(array_values($cities), $cities);
    $form[$city_filter]['#type'] = 'select';
    $form[$city_filter]['#size'] = 1;
    $form[$city_filter]['#empty_option'] = t('-Select-');
    $form[$city_filter]['#options'] = $cities;
  }

  // Add placeholders to all text fields. Uses label values so they're editable in interface
  foreach($form['#info'] as $key => $form_info_item) {
    foreach ($form as $form_item_key => $form_item_value) {
      if ($form_item_key == $form_info_item['value']) {
        if ($form[$form_item_key]['#type'] == 'textfield') {
          $form[$form_item_key]['#placeholder'] = $form_info_item['label'];
        }
      }
    }
  }
}

/**
 * Implements hook_geocoder_provider_info_alter().
*/
function facility_search_geocoder_provider_info_alter(&$providers) {
  // Alter the google maps geocoder.
  if (isset($providers['googlemaps'])) {
    $providers['googlemaps']['arguments']['useSsl'] = TRUE;
    $config = \Drupal::config('geolocation.settings');
    // Use the Google Map API key variable provided by the geolocation module.
    if (!empty($config->get('google_map_api_key'))) {
      $api_arg_key = array_search('apiKey', $providers['googlemaps']['arguments'], TRUE);
      // This is a numbered array, so have to remove the original key or there will be an extra argument.
      unset($providers['googlemaps']['arguments'][$api_arg_key]);
      $providers['googlemaps']['arguments']['apiKey'] = $config->get('google_map_api_key');
    }
  };
}