<?php
/**
 * @file
 *  Drupal hooks for facility_search.module
 */

use Drupal\views\ViewExecutable;
use Drupal\Core\Form\FormStateInterface;
use Drupal\views\Plugin\views\query\QueryPluginBase;

/**
 * Custom submit function for facility search exposed form.
 *
 * @param array $form
 * @param FormStateInterface $form_state
 * @return void
 */

/**
 * Implements hook_form_alter().
 */
function facility_search_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if($form_id == 'user_login_form' ) {
    $form['name']['#placeholder'] = t('E-Mail Address');
    // Prevents homepage login form from centering in viewport (which cuts off top of page).
    $form['name']['#attributes']['autofocus'] = FALSE;
    $form['pass']['#placeholder'] = t('Password');
  }

  // Alter the facility search view's exposed filters form.
  if ($form['#id'] == 'views-exposed-form-d9-facility-search-page-1') {
    $form['facility_type']['#empty_option'] = 'All';
    // $request = \Drupal::request();
    // if (is_null($request->get('EXPOSED_FILTER_FIELD_MACHINE_NAME'))) {
    //   // get all input fields first then modify the one you want to change
    //   $input = $form_state->getUserInput();
    //   $input['facility_type'] = 'All';
    //   $form_state->setUserInput($input);
    // }
  }
}

/**
 * Implements hook_views_query_alter().
 */
function facility_search_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if ($view->id() !== 'd9_facility_search') {
    return;
  }
  $input = $view->exposed_raw_input;

  // If there is no more granularity than a city, remove proximity
  // sort and sort alphabetically.
  $address_parts = explode(',', $input['proximity_center']['geocoder']['geolocation_geocoder_address']);
  if (count($address_parts) < 4) {
    $query->orderby[0] = [
      'field' => 'title',
      'direction' => 'ASC'
    ];
  }

  // If there is no geocoder address in the exposed filter input, remove
  // 'center' from the query.
  if (!empty($input['center']) && !empty($input['center']['geocoder'])
    && $input['center']['geocoder']['geolocation_geocoder_address'] == '') {
    unset($input['center']);
  }

  $view->exposed_raw_input = $input;
}

/**
 * Implements hook_views_data().
 */
function facility_search_views_data() {
  $data['views']['result_plus_proximity'] = [
    'title' => t('Result Summary plus Proximity'),
    'help' => t('Displays Summary plus Proximity Summary.'),
    'area' => [
      'id' => 'result_plus_proximity',
    ],
  ];

  return $data;
}

/**
 * Implements hook_views_data_alter().
 */
function facility_search_views_data_alter(&$data) {
  $data['node__field_ge']['field_ge_geocoder_argument']['argument']['id'] = 'facility_search_geolocation_geocoder_argument';
  $data['node__field_ge']['field_ge_geocoder_argument']['title short'] = t('MSC Facility Search Geocoder Address Argument');
}
