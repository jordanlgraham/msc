<?php

use Drupal\netforum_event_sync\EventSync;

/**
 * Implements hook_cron().
 */
function netforum_event_sync_cron() {
  $last = \Drupal::state()->get(EventSync::LAST_SYNC_STATE_KEY, strtotime('1/1/2017'));
  try {
    $count = \Drupal::service('netforum_event_sync.event_sync')->syncEvents($last);
    \Drupal::logger('netforum_event_sync')->notice('Synced @count events.', ['@count' => $count]);
    \Drupal::state()->set(EventSync::LAST_SYNC_STATE_KEY, \Drupal::time()->getRequestTime());
  }
  catch (Exception $exception) {
    watchdog_exception('netforum_event_sync', $exception, 'Unable to sync events during cron.');
  }
}

/**
 * Batch 'finished' callback used by event sync batches.
 */
function netforum_event_sync_finished($success, $results, $operations) {
  $messenger = \Drupal::messenger();
  if ($success) {
    // Display the number of events we synced.
    $total = (!empty($results['success'])) ? count($results['success']) : 0;
    $messenger->addMessage(t('@count event(s) processed.', ['@count' => $total]));
    // $messenger->addMessage(t('The final result was "%final"', ['%final' => end($results['success'])]));
  }
  else {
    // An error occurred.
    // $operations contains the operations that remained unprocessed.
    $error_operation = reset($operations);
    $messenger->addMessage(
      t('An error occurred while processing @operation with arguments : @args',
        [
          '@operation' => $error_operation[0],
          '@args' => print_r($error_operation[0], TRUE),
        ]
      )
    );
  }
}